2024-11-17 19:00:02.388224: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:477] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered
WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
E0000 00:00:1731870002.416642   54597 cuda_dnn.cc:8310] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered
E0000 00:00:1731870002.425718   54597 cuda_blas.cc:1418] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered
2024-11-17 19:00:02.454937: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
error: XDG_RUNTIME_DIR not set in the environment.


Write to file /opt/notebooks/shielding_files_20241117T190006_d5xk7tuh/shield.


Write to file /opt/notebooks/shielding_files_20241117T190015_6f9dllcg/shield.


Write to file /opt/notebooks/shielding_files_20241117T190024_tfahm6xf/shield.


Write to file /opt/notebooks/shielding_files_20241117T190033_ixfpjc2x/shield.
pygame 2.6.1 (SDL 2.28.4, Python 3.10.4)
Hello from the pygame community. https://www.pygame.org/contribute.html
Starting the training
<PIL.Image.Image image mode=RGB size=352x288 at 0x7F0270FEC100>
Directory created successfully: /opt/notebooks/shielding_files_20241117T190006_d5xk7tuh
/opt/Minigrid2PRISM/build/main -i /opt/notebooks/shielding_files_20241117T190006_d5xk7tuh/grid.txt -o /opt/notebooks/shielding_files_20241117T190006_d5xk7tuh/grid.prism
Computing new shield
LOG: Starting with explicit model creation...
Elapsed time is 1.7169313430786133 seconds.
LOG: Starting with model checking...
Elapsed time is 0.26343870162963867 seconds.
LOG: Starting to translate shield...
Elapsed time is 5.352581977844238 seconds.
Directory created successfully: /opt/notebooks/shielding_files_20241117T190015_6f9dllcg
/opt/Minigrid2PRISM/build/main -i /opt/notebooks/shielding_files_20241117T190015_6f9dllcg/grid.txt -o /opt/notebooks/shielding_files_20241117T190015_6f9dllcg/grid.prism
Computing new shield
LOG: Starting with explicit model creation...
Elapsed time is 1.6558055877685547 seconds.
LOG: Starting with model checking...
Elapsed time is 0.25449442863464355 seconds.
LOG: Starting to translate shield...
Elapsed time is 5.198172330856323 seconds.
Directory created successfully: /opt/notebooks/shielding_files_20241117T190024_tfahm6xf
/opt/Minigrid2PRISM/build/main -i /opt/notebooks/shielding_files_20241117T190024_tfahm6xf/grid.txt -o /opt/notebooks/shielding_files_20241117T190024_tfahm6xf/grid.prism
Computing new shield
LOG: Starting with explicit model creation...
Elapsed time is 1.641240119934082 seconds.
LOG: Starting with model checking...
Elapsed time is 0.22642302513122559 seconds.
LOG: Starting to translate shield...
Elapsed time is 5.533400297164917 seconds.
Directory created successfully: /opt/notebooks/shielding_files_20241117T190033_ixfpjc2x
/opt/Minigrid2PRISM/build/main -i /opt/notebooks/shielding_files_20241117T190033_ixfpjc2x/grid.txt -o /opt/notebooks/shielding_files_20241117T190033_ixfpjc2x/grid.prism
Computing new shield
LOG: Starting with explicit model creation...
Elapsed time is 1.620636224746704 seconds.
LOG: Starting with model checking...
Elapsed time is 0.23441481590270996 seconds.
LOG: Starting to translate shield...
Elapsed time is 4.948408842086792 seconds.
Image saved as shield_overlay_image.png
The shield for shield_value = 0.9
Image saved as shield_overlay_image.png
The shield for shield_value = 0.95
Image saved as shield_overlay_image.png
The shield for shield_value = 0.99
Image saved as shield_overlay_image.png
The shield for shield_value = 1.0
Training with shield:
Image saved as shield_overlay_image.png
Using cpu device
Wrapping the env with a `Monitor` wrapper
Wrapping the env in a DummyVecEnv.
Wrapping the env in a VecTransposeImage.
truncated:  {'reached_goal': False, 'ran_into_lava': False, 'opened_door': False, 'picked_up': False, 'collision': False}
truncated:  {'reached_goal': False, 'ran_into_lava': False, 'opened_door': False, 'picked_up': False, 'collision': False}
truncated:  {'reached_goal': False, 'ran_into_lava': False, 'opened_door': False, 'picked_up': False, 'collision': False}
truncated:  {'reached_goal': False, 'ran_into_lava': False, 'opened_door': False, 'picked_up': False, 'collision': False}
truncated:  {'reached_goal': False, 'ran_into_lava': False, 'opened_door': False, 'picked_up': False, 'collision': False}
truncated:  {'reached_goal': False, 'ran_into_lava': False, 'opened_door': False, 'picked_up': False, 'collision': False}
[(array([1, 5]), 3), ('blue', (np.int64(2), np.int64(3)), 3), (np.int64(3), array([1, 5]), 3), ('blue', (np.int64(2), np.int64(2)), 3), (np.int64(4), array([1, 5]), 3), ('blue', (np.int64(2), np.int64(2)), 0), (np.int64(2), (np.int64(1), np.int64(4)), 3), ('blue', (np.int64(3), np.int64(2)), 0), (np.int64(3), (np.int64(1), np.int64(4)), 3), ('blue', (np.int64(4), np.int64(2)), 0), (np.int64(0), (np.int64(1), np.int64(4)), 2), ('blue', (np.int64(5), np.int64(2)), 0), (np.int64(1), (np.int64(1), np.int64(4)), 3), ('blue', (np.int64(6), np.int64(2)), 0), (np.int64(4), (np.int64(1), np.int64(4)), 3), ('blue', (np.int64(7), np.int64(2)), 0), (np.int64(3), (np.int64(1), np.int64(4)), 3), ('blue', (np.int64(8), np.int64(2)), 0), (np.int64(2), (np.int64(1), np.int64(3)), 3), ('blue', (np.int64(8), np.int64(2)), 1), (np.int64(5), (np.int64(1), np.int64(3)), 3), ('blue', (np.int64(8), np.int64(3)), 1), (np.int64(2), (np.int64(1), np.int64(2)), 3), ('blue', (np.int64(8), np.int64(4)), 1), (np.int64(3), (np.int64(1), np.int64(2)), 3), ('blue', (np.int64(8), np.int64(4)), 0), (np.int64(1), (np.int64(1), np.int64(2)), 0), ('blue', (np.int64(8), np.int64(4)), 3), (np.int64(2), (np.int64(2), np.int64(2)), 0), ('blue', (np.int64(8), np.int64(3)), 3), (np.int64(4), (np.int64(2), np.int64(2)), 0), ('blue', (np.int64(8), np.int64(2)), 3), (np.int64(3), (np.int64(2), np.int64(2)), 0), ('blue', (np.int64(8), np.int64(2)), 3), (np.int64(4), (np.int64(2), np.int64(2)), 0), ('blue', (np.int64(8), np.int64(2)), 3), (np.int64(1), (np.int64(2), np.int64(2)), 1), ('blue', (np.int64(8), np.int64(2)), 3), (np.int64(6), (np.int64(2), np.int64(2)), 1), ('blue', (np.int64(8), np.int64(2)), 3), (np.int64(4), (np.int64(2), np.int64(2)), 1), ('blue', (np.int64(8), np.int64(2)), 3), (np.int64(0), (np.int64(2), np.int64(2)), 0), ('blue', (np.int64(8), np.int64(2)), 3), (np.int64(1), (np.int64(2), np.int64(2)), 1), ('blue', (np.int64(8), np.int64(2)), 3), (np.int64(5), (np.int64(2), np.int64(2)), 1), ('blue', (np.int64(8), np.int64(2)), 3), (np.int64(0), (np.int64(2), np.int64(2)), 0), ('blue', (np.int64(8), np.int64(2)), 3), (np.int64(1), (np.int64(2), np.int64(2)), 1), ('blue', (np.int64(8), np.int64(2)), 3), (np.int64(6), (np.int64(2), np.int64(2)), 1), ('blue', (np.int64(8), np.int64(2)), 3), (np.int64(0), (np.int64(2), np.int64(2)), 0), ('blue', (np.int64(8), np.int64(2)), 3), (np.int64(4), (np.int64(2), np.int64(2)), 0), ('blue', (np.int64(8), np.int64(2)), 3), (np.int64(0), (np.int64(2), np.int64(2)), 3), ('blue', (np.int64(8), np.int64(2)), 3), (np.int64(5), (np.int64(2), np.int64(2)), 3), ('blue', (np.int64(8), np.int64(2)), 3), (np.int64(5), (np.int64(2), np.int64(2)), 3), ('blue', (np.int64(8), np.int64(2)), 3), (np.int64(1), (np.int64(2), np.int64(2)), 0), ('blue', (np.int64(8), np.int64(1)), 3), (np.int64(2), (np.int64(3), np.int64(2)), 0), ('blue', (np.int64(8), np.int64(1)), 2), (np.int64(1), (np.int64(3), np.int64(2)), 1), (np.int64(2), (np.int64(3), np.int64(3)), 1)]
terminated:  {'reached_goal': False, 'ran_into_lava': True, 'opened_door': False, 'picked_up': False, 'collision': False}
truncated:  {'reached_goal': False, 'ran_into_lava': False, 'opened_door': False, 'picked_up': False, 'collision': False}
truncated:  {'reached_goal': False, 'ran_into_lava': False, 'opened_door': False, 'picked_up': False, 'collision': False}
truncated:  {'reached_goal': False, 'ran_into_lava': False, 'opened_door': False, 'picked_up': False, 'collision': False}
truncated:  {'reached_goal': False, 'ran_into_lava': False, 'opened_door': False, 'picked_up': False, 'collision': False}
truncated:  {'reached_goal': False, 'ran_into_lava': False, 'opened_door': False, 'picked_up': False, 'collision': False}
truncated:  {'reached_goal': False, 'ran_into_lava': False, 'opened_door': False, 'picked_up': False, 'collision': False}
truncated:  {'reached_goal': False, 'ran_into_lava': False, 'opened_door': False, 'picked_up': False, 'collision': False}
truncated:  {'reached_goal': False, 'ran_into_lava': False, 'opened_door': False, 'picked_up': False, 'collision': False}
truncated:  {'reached_goal': False, 'ran_into_lava': False, 'opened_door': False, 'picked_up': False, 'collision': False}
truncated:  {'reached_goal': False, 'ran_into_lava': False, 'opened_door': False, 'picked_up': False, 'collision': False}
[(array([1, 5]), 0), ('blue', (np.int64(2), np.int64(3)), 3), (np.int64(3), array([1, 5]), 0), ('blue', (np.int64(2), np.int64(2)), 3), (np.int64(2), (np.int64(2), np.int64(5)), 0), ('blue', (np.int64(2), np.int64(2)), 0), (np.int64(5), (np.int64(2), np.int64(5)), 0), ('blue', (np.int64(3), np.int64(2)), 0), (np.int64(0), (np.int64(2), np.int64(5)), 3), ('blue', (np.int64(4), np.int64(2)), 0), (np.int64(1), (np.int64(2), np.int64(5)), 0), ('blue', (np.int64(5), np.int64(2)), 0), (np.int64(1), (np.int64(2), np.int64(5)), 1), ('blue', (np.int64(6), np.int64(2)), 0), (np.int64(3), (np.int64(2), np.int64(5)), 1), ('blue', (np.int64(7), np.int64(2)), 0), (np.int64(5), (np.int64(2), np.int64(5)), 1), ('blue', (np.int64(8), np.int64(2)), 0), (np.int64(6), (np.int64(2), np.int64(5)), 1), ('blue', (np.int64(8), np.int64(2)), 1), (np.int64(4), (np.int64(2), np.int64(5)), 1), ('blue', (np.int64(8), np.int64(3)), 1), (np.int64(0), (np.int64(2), np.int64(5)), 0), ('blue', (np.int64(8), np.int64(4)), 1), (np.int64(2), (np.int64(3), np.int64(5)), 0), ('blue', (np.int64(8), np.int64(4)), 0), (np.int64(1), (np.int64(3), np.int64(5)), 1), ('blue', (np.int64(8), np.int64(4)), 3), (np.int64(4), (np.int64(3), np.int64(5)), 1), ('blue', (np.int64(8), np.int64(3)), 3), (np.int64(1), (np.int64(3), np.int64(5)), 2), ('blue', (np.int64(8), np.int64(2)), 3), (np.int64(6), (np.int64(3), np.int64(5)), 2), ('blue', (np.int64(8), np.int64(2)), 2), (np.int64(1), (np.int64(3), np.int64(5)), 3), ('blue', (np.int64(7), np.int64(2)), 2), (np.int64(5), (np.int64(3), np.int64(5)), 3), ('blue', (np.int64(6), np.int64(2)), 2), (np.int64(5), (np.int64(3), np.int64(5)), 3), ('blue', (np.int64(5), np.int64(2)), 2), (np.int64(1), (np.int64(3), np.int64(5)), 0), ('blue', (np.int64(4), np.int64(2)), 2), (np.int64(4), (np.int64(3), np.int64(5)), 0), ('blue', (np.int64(3), np.int64(2)), 2), (np.int64(2), (np.int64(4), np.int64(5)), 0), ('blue', (np.int64(2), np.int64(2)), 2), (np.int64(2), (np.int64(5), np.int64(5)), 0), ('blue', (np.int64(2), np.int64(2)), 1), (np.int64(4), (np.int64(5), np.int64(5)), 0), ('blue', (np.int64(2), np.int64(3)), 1), (np.int64(3), (np.int64(5), np.int64(5)), 0), ('blue', (np.int64(2), np.int64(4)), 1), (np.int64(5), (np.int64(5), np.int64(5)), 0), ('blue', (np.int64(2), np.int64(4)), 0), (np.int64(2), (np.int64(6), np.int64(5)), 0), ('blue', (np.int64(2), np.int64(4)), 3), (np.int64(2), (np.int64(7), np.int64(5)), 0), ('blue', (np.int64(2), np.int64(3)), 3), (np.int64(6), (np.int64(7), np.int64(5)), 0), ('blue', (np.int64(2), np.int64(2)), 3), (np.int64(2), (np.int64(8), np.int64(5)), 0), ('blue', (np.int64(2), np.int64(2)), 0), (np.int64(3), (np.int64(8), np.int64(5)), 0), ('blue', (np.int64(3), np.int64(2)), 0), (np.int64(4), (np.int64(8), np.int64(5)), 0), ('blue', (np.int64(4), np.int64(2)), 0), (np.int64(0), (np.int64(8), np.int64(5)), 3), ('blue', (np.int64(5), np.int64(2)), 0), (np.int64(2), (np.int64(8), np.int64(4)), 3), ('blue', (np.int64(6), np.int64(2)), 0), (np.int64(2), (np.int64(8), np.int64(3)), 3), ('blue', (np.int64(7), np.int64(2)), 0), (np.int64(1), (np.int64(8), np.int64(3)), 0), ('blue', (np.int64(8), np.int64(2)), 0), (np.int64(4), (np.int64(8), np.int64(3)), 0), ('blue', (np.int64(9), np.int64(2)), 0), (np.int64(1), (np.int64(8), np.int64(3)), 1), ('blue', (np.int64(9), np.int64(2)), 1), (np.int64(2), (np.int64(8), np.int64(4)), 1), ('blue', (np.int64(9), np.int64(3)), 1), (np.int64(5), (np.int64(8), np.int64(4)), 1), ('blue', (np.int64(9), np.int64(4)), 1), (np.int64(3), (np.int64(8), np.int64(4)), 1), ('blue', (np.int64(9), np.int64(4)), 2), (np.int64(3), (np.int64(8), np.int64(4)), 1), ('blue', (np.int64(8), np.int64(4)), 2), (np.int64(4), (np.int64(8), np.int64(4)), 1)]
terminated:  {'reached_goal': False, 'ran_into_lava': False, 'opened_door': False, 'picked_up': False, 'collision': True}
truncated:  {'reached_goal': False, 'ran_into_lava': False, 'opened_door': False, 'picked_up': False, 'collision': False}
truncated:  {'reached_goal': False, 'ran_into_lava': False, 'opened_door': False, 'picked_up': False, 'collision': False}
truncated:  {'reached_goal': False, 'ran_into_lava': False, 'opened_door': False, 'picked_up': False, 'collision': False}
truncated:  {'reached_goal': False, 'ran_into_lava': False, 'opened_door': False, 'picked_up': False, 'collision': False}
truncated:  {'reached_goal': False, 'ran_into_lava': False, 'opened_door': False, 'picked_up': False, 'collision': False}
[(array([5, 7]), 3), ('blue', (np.int64(2), np.int64(3)), 3), (np.int64(3), array([5, 7]), 3), ('blue', (np.int64(2), np.int64(2)), 3), (np.int64(4), array([5, 7]), 3), ('blue', (np.int64(2), np.int64(2)), 0), (np.int64(1), array([5, 7]), 0), ('blue', (np.int64(3), np.int64(2)), 0), (np.int64(0), array([5, 7]), 3), ('blue', (np.int64(4), np.int64(2)), 0), (np.int64(2), (np.int64(5), np.int64(6)), 3), ('blue', (np.int64(5), np.int64(2)), 0), (np.int64(2), (np.int64(5), np.int64(5)), 3), ('blue', (np.int64(6), np.int64(2)), 0), (np.int64(5), (np.int64(5), np.int64(5)), 3), (np.int64(2), (np.int64(5), np.int64(4)), 3)]
terminated:  {'reached_goal': False, 'ran_into_lava': True, 'opened_door': False, 'picked_up': False, 'collision': False}
truncated:  {'reached_goal': False, 'ran_into_lava': False, 'opened_door': False, 'picked_up': False, 'collision': False}
truncated:  {'reached_goal': False, 'ran_into_lava': False, 'opened_door': False, 'picked_up': False, 'collision': False}
truncated:  {'reached_goal': False, 'ran_into_lava': False, 'opened_door': False, 'picked_up': False, 'collision': False}
truncated:  {'reached_goal': False, 'ran_into_lava': False, 'opened_door': False, 'picked_up': False, 'collision': False}
truncated:  {'reached_goal': False, 'ran_into_lava': False, 'opened_door': False, 'picked_up': False, 'collision': False}
[(array([4, 6]), 2), ('blue', (np.int64(2), np.int64(3)), 3), (np.int64(6), array([4, 6]), 2), ('blue', (np.int64(2), np.int64(2)), 3), (np.int64(5), array([4, 6]), 2), ('blue', (np.int64(2), np.int64(2)), 0), (np.int64(3), array([4, 6]), 2), ('blue', (np.int64(3), np.int64(2)), 0), (np.int64(1), array([4, 6]), 3), ('blue', (np.int64(4), np.int64(2)), 0), (np.int64(6), array([4, 6]), 3), ('blue', (np.int64(5), np.int64(2)), 0), (np.int64(2), (np.int64(4), np.int64(5)), 3), ('blue', (np.int64(6), np.int64(2)), 0), (np.int64(1), (np.int64(4), np.int64(5)), 0), ('blue', (np.int64(7), np.int64(2)), 0), (np.int64(4), (np.int64(4), np.int64(5)), 0), ('blue', (np.int64(8), np.int64(2)), 0), (np.int64(3), (np.int64(4), np.int64(5)), 0), ('blue', (np.int64(8), np.int64(2)), 1), (np.int64(3), (np.int64(4), np.int64(5)), 0), ('blue', (np.int64(8), np.int64(3)), 1), (np.int64(0), (np.int64(4), np.int64(5)), 3), (np.int64(2), (np.int64(4), np.int64(4)), 3)]
terminated:  {'reached_goal': False, 'ran_into_lava': True, 'opened_door': False, 'picked_up': False, 'collision': False}
truncated:  {'reached_goal': False, 'ran_into_lava': False, 'opened_door': False, 'picked_up': False, 'collision': False}
truncated:  {'reached_goal': False, 'ran_into_lava': False, 'opened_door': False, 'picked_up': False, 'collision': False}
truncated:  {'reached_goal': False, 'ran_into_lava': False, 'opened_door': False, 'picked_up': False, 'collision': False}
truncated:  {'reached_goal': False, 'ran_into_lava': False, 'opened_door': False, 'picked_up': False, 'collision': False}
truncated:  {'reached_goal': False, 'ran_into_lava': False, 'opened_door': False, 'picked_up': False, 'collision': False}
truncated:  {'reached_goal': False, 'ran_into_lava': False, 'opened_door': False, 'picked_up': False, 'collision': False}
[(array([8, 5]), 0), ('blue', (np.int64(2), np.int64(3)), 3), (np.int64(5), array([8, 5]), 0), ('blue', (np.int64(2), np.int64(2)), 3), (np.int64(5), array([8, 5]), 0), ('blue', (np.int64(2), np.int64(2)), 0), (np.int64(0), array([8, 5]), 3), ('blue', (np.int64(3), np.int64(2)), 0), (np.int64(5), array([8, 5]), 3), ('blue', (np.int64(4), np.int64(2)), 0), (np.int64(2), (np.int64(8), np.int64(4)), 3), ('blue', (np.int64(5), np.int64(2)), 0), (np.int64(1), (np.int64(8), np.int64(4)), 0), ('blue', (np.int64(6), np.int64(2)), 0), (np.int64(1), (np.int64(8), np.int64(4)), 1), ('blue', (np.int64(7), np.int64(2)), 0), (np.int64(0), (np.int64(8), np.int64(4)), 0), ('blue', (np.int64(8), np.int64(2)), 0), (np.int64(0), (np.int64(8), np.int64(4)), 3), ('blue', (np.int64(8), np.int64(2)), 0), (np.int64(4), (np.int64(8), np.int64(4)), 3), ('blue', (np.int64(8), np.int64(2)), 0), (np.int64(1), (np.int64(8), np.int64(4)), 0), ('blue', (np.int64(8), np.int64(2)), 0), (np.int64(6), (np.int64(8), np.int64(4)), 0), ('blue', (np.int64(8), np.int64(2)), 0), (np.int64(1), (np.int64(8), np.int64(4)), 1), ('blue', (np.int64(8), np.int64(2)), 1), (np.int64(2), (np.int64(8), np.int64(5)), 1), ('blue', (np.int64(8), np.int64(3)), 1), (np.int64(1), (np.int64(8), np.int64(5)), 2), ('blue', (np.int64(8), np.int64(4)), 1), (np.int64(5), (np.int64(8), np.int64(5)), 2), ('blue', (np.int64(8), np.int64(4)), 0), (np.int64(1), (np.int64(8), np.int64(5)), 3), ('blue', (np.int64(8), np.int64(4)), 3), (np.int64(4), (np.int64(8), np.int64(5)), 3), (np.int64(2), (np.int64(8), np.int64(4)), 3)]
terminated:  {'reached_goal': False, 'ran_into_lava': False, 'opened_door': False, 'picked_up': False, 'collision': True}
truncated:  {'reached_goal': False, 'ran_into_lava': False, 'opened_door': False, 'picked_up': False, 'collision': False}
truncated:  {'reached_goal': False, 'ran_into_lava': False, 'opened_door': False, 'picked_up': False, 'collision': False}
truncated:  {'reached_goal': False, 'ran_into_lava': False, 'opened_door': False, 'picked_up': False, 'collision': False}
[(array([8, 5]), 2), ('blue', (np.int64(2), np.int64(3)), 3), (np.int64(4), array([8, 5]), 2), ('blue', (np.int64(2), np.int64(2)), 3), (np.int64(2), (np.int64(7), np.int64(5)), 2), ('blue', (np.int64(2), np.int64(2)), 0), (np.int64(3), (np.int64(7), np.int64(5)), 2), ('blue', (np.int64(3), np.int64(2)), 0), (np.int64(2), (np.int64(6), np.int64(5)), 2), ('blue', (np.int64(4), np.int64(2)), 0), (np.int64(2), (np.int64(5), np.int64(5)), 2), ('blue', (np.int64(5), np.int64(2)), 0), (np.int64(2), (np.int64(4), np.int64(5)), 2), ('blue', (np.int64(6), np.int64(2)), 0), (np.int64(1), (np.int64(4), np.int64(5)), 3), ('blue', (np.int64(7), np.int64(2)), 0), (np.int64(0), (np.int64(4), np.int64(5)), 2), ('blue', (np.int64(8), np.int64(2)), 0), (np.int64(1), (np.int64(4), np.int64(5)), 3), ('blue', (np.int64(8), np.int64(2)), 1), (np.int64(3), (np.int64(4), np.int64(5)), 3), ('blue', (np.int64(8), np.int64(3)), 1), (np.int64(3), (np.int64(4), np.int64(5)), 3), ('blue', (np.int64(8), np.int64(4)), 1), (np.int64(0), (np.int64(4), np.int64(5)), 2), ('blue', (np.int64(8), np.int64(4)), 0), (np.int64(6), (np.int64(4), np.int64(5)), 2), ('blue', (np.int64(8), np.int64(4)), 3), (np.int64(1), (np.int64(4), np.int64(5)), 3), ('blue', (np.int64(8), np.int64(3)), 3), (np.int64(0), (np.int64(4), np.int64(5)), 2), ('blue', (np.int64(8), np.int64(2)), 3), (np.int64(4), (np.int64(4), np.int64(5)), 2), ('blue', (np.int64(8), np.int64(2)), 2), (np.int64(0), (np.int64(4), np.int64(5)), 1), ('blue', (np.int64(7), np.int64(2)), 2), (np.int64(1), (np.int64(4), np.int64(5)), 2), ('blue', (np.int64(6), np.int64(2)), 2), (np.int64(5), (np.int64(4), np.int64(5)), 2), ('blue', (np.int64(5), np.int64(2)), 2), (np.int64(2), (np.int64(3), np.int64(5)), 2), ('blue', (np.int64(4), np.int64(2)), 2), (np.int64(4), (np.int64(3), np.int64(5)), 2), ('blue', (np.int64(3), np.int64(2)), 2), (np.int64(0), (np.int64(3), np.int64(5)), 1), ('blue', (np.int64(2), np.int64(2)), 2), (np.int64(4), (np.int64(3), np.int64(5)), 1), ('blue', (np.int64(2), np.int64(2)), 1), (np.int64(5), (np.int64(3), np.int64(5)), 1), ('blue', (np.int64(2), np.int64(3)), 1), (np.int64(0), (np.int64(3), np.int64(5)), 0), ('blue', (np.int64(2), np.int64(4)), 1), (np.int64(0), (np.int64(3), np.int64(5)), 3), ('blue', (np.int64(2), np.int64(4)), 0), (np.int64(6), (np.int64(3), np.int64(5)), 3), ('blue', (np.int64(2), np.int64(4)), 3), (np.int64(0), (np.int64(3), np.int64(5)), 2), ('blue', (np.int64(2), np.int64(3)), 3), (np.int64(2), (np.int64(2), np.int64(5)), 2), ('blue', (np.int64(2), np.int64(2)), 3), (np.int64(5), (np.int64(2), np.int64(5)), 2), ('blue', (np.int64(2), np.int64(2)), 0), (np.int64(4), (np.int64(2), np.int64(5)), 2), ('blue', (np.int64(3), np.int64(2)), 0), (np.int64(1), (np.int64(2), np.int64(5)), 3), ('blue', (np.int64(4), np.int64(2)), 0), (np.int64(1), (np.int64(2), np.int64(5)), 0), ('blue', (np.int64(5), np.int64(2)), 0), (np.int64(2), (np.int64(3), np.int64(5)), 0), ('blue', (np.int64(6), np.int64(2)), 0), (np.int64(0), (np.int64(3), np.int64(5)), 3), (np.int64(2), (np.int64(3), np.int64(4)), 3)]
terminated:  {'reached_goal': False, 'ran_into_lava': True, 'opened_door': False, 'picked_up': False, 'collision': False}
truncated:  {'reached_goal': False, 'ran_into_lava': False, 'opened_door': False, 'picked_up': False, 'collision': False}
[(array([3, 7]), 1), ('blue', (np.int64(2), np.int64(3)), 3), (np.int64(5), array([3, 7]), 1), ('blue', (np.int64(2), np.int64(2)), 3), (np.int64(2), array([3, 7]), 1), ('blue', (np.int64(2), np.int64(2)), 0), (np.int64(3), array([3, 7]), 1), ('blue', (np.int64(3), np.int64(2)), 0), (np.int64(0), array([3, 7]), 0), ('blue', (np.int64(4), np.int64(2)), 0), (np.int64(0), array([3, 7]), 3), ('blue', (np.int64(5), np.int64(2)), 0), (np.int64(0), array([3, 7]), 2), ('blue', (np.int64(6), np.int64(2)), 0), (np.int64(1), array([3, 7]), 3), ('blue', (np.int64(7), np.int64(2)), 0), (np.int64(2), (np.int64(3), np.int64(6)), 3), ('blue', (np.int64(8), np.int64(2)), 0), (np.int64(5), (np.int64(3), np.int64(6)), 3), ('blue', (np.int64(8), np.int64(2)), 1), (np.int64(5), (np.int64(3), np.int64(6)), 3), ('blue', (np.int64(8), np.int64(3)), 1), (np.int64(2), (np.int64(3), np.int64(5)), 3), ('blue', (np.int64(8), np.int64(4)), 1), (np.int64(1), (np.int64(3), np.int64(5)), 0), ('blue', (np.int64(8), np.int64(4)), 0), (np.int64(6), (np.int64(3), np.int64(5)), 0), ('blue', (np.int64(8), np.int64(4)), 3), (np.int64(6), (np.int64(3), np.int64(5)), 0), ('blue', (np.int64(8), np.int64(3)), 3), (np.int64(5), (np.int64(3), np.int64(5)), 0), ('blue', (np.int64(8), np.int64(2)), 3), (np.int64(6), (np.int64(3), np.int64(5)), 0), ('blue', (np.int64(8), np.int64(2)), 2), (np.int64(2), (np.int64(4), np.int64(5)), 0), ('blue', (np.int64(7), np.int64(2)), 2), (np.int64(0), (np.int64(4), np.int64(5)), 3), (np.int64(2), (np.int64(4), np.int64(4)), 3)]
terminated:  {'reached_goal': False, 'ran_into_lava': True, 'opened_door': False, 'picked_up': False, 'collision': False}
truncated:  {'reached_goal': False, 'ran_into_lava': False, 'opened_door': False, 'picked_up': False, 'collision': False}
-----------------------------------
| info/                |          |
|    no_shield_action  | 0        |
|    sum_collision     | 2        |
|    sum_opened_door   | 0        |
|    sum_picked_up     | 0        |
|    sum_ran_into_lava | 5        |
|    sum_reached_goal  | 0        |
| rollout/             |          |
|    ep_len_mean       | 46       |
|    ep_rew_mean       | -1.08    |
| time/                |          |
|    fps               | 7        |
|    iterations        | 1        |
|    time_elapsed      | 268      |
|    total_timesteps   | 2048     |
-----------------------------------
Traceback (most recent call last):
  File "/opt/notebooks/SlipperyCliff.py", line 98, in <module>
    main()
  File "/opt/notebooks/SlipperyCliff.py", line 92, in main
    model.learn(steps,callback=[InfoCallback()])
  File "/usr/local/lib/python3.10/dist-packages/sb3_contrib/ppo_mask/ppo_mask.py", line 466, in learn
    self.train()
  File "/usr/local/lib/python3.10/dist-packages/sb3_contrib/ppo_mask/ppo_mask.py", line 408, in train
    self.policy.optimizer.step()
  File "/usr/local/lib/python3.10/dist-packages/torch/optim/optimizer.py", line 487, in wrapper
    out = func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/torch/optim/optimizer.py", line 91, in _use_grad
    ret = func(self, *args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/torch/optim/adam.py", line 223, in step
    adam(
  File "/usr/local/lib/python3.10/dist-packages/torch/optim/optimizer.py", line 154, in maybe_fallback
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.10/dist-packages/torch/optim/adam.py", line 784, in adam
    func(
  File "/usr/local/lib/python3.10/dist-packages/torch/optim/adam.py", line 430, in _single_tensor_adam
    denom = (exp_avg_sq.sqrt() / bias_correction2_sqrt).add_(eps)
KeyboardInterrupt
